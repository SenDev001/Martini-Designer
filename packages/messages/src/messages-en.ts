export default {
    not_blank: "Cannot be blank.",
    must_be_type: (type: string) => `Must be a ${type}.`,
    must_be_integer: "Must be a whole number.",
    must_be_greater_or_equal: (min: number) => `Must be greater or equal to ${min}.`,
    must_be_less_or_equal: (min: number) => `Must be less or equal to ${min}.`,
    must_be_valid_email: "Must be a valid email.",
    invalid_code_dir_name: (name: string) => `Invalid code directory name '${name}'.`,
    number: "number",
    cannot_use_java_keywords: "Cannot use Java keywords as name.",
    not_valid_name: "Not a valid name.",
    resource_exists: "A resource with that name already exists.",
    not_directory: "Not a directory.",
    location_not_exists: "Location does not exist.",
    directory_readonly: "Directory is readonly.",
    location_must_inside_code_dir: "Location must be inside the code directory.",
    show_source_only: "Show source only.",
    show_source_and_preview: "Show source and preview.",
    show_preview_only: "Show preview only.",
    toggle_orientation: "Toggle horizontal or vertical orientation.",
    no_props_to_display: "No properties to display.",
    click_to_edit: "Click to edit.",
    cancel_btn: "Cancel",
    apply_btn: "Apply",
    send_btn: "Send",
    select_btn: "Select",
    reset_default: "Reset to Default",
    step_prop_desc_comments: "Comments for the step.",
    step_prop_desc_label: "Label used by Fork and Break step.",
    step_prop_desc_enabled: "Whether or not the step is enabled, disabled step are not invoked.",
    step_prop_desc_block_type: "Type of Block step.",
    step_prop_desc_language: "Programming language of the script or expression.",
    step_prop_desc_fork_expression: `The expression to (optionally) evaluate when determining which child to invoke.
The result of this expression will be used to find a child whose label matches.
If a child step with a matching label is found, it will be invoked.
If it is not found, the fork step will invoke the child step whose label is $else.
If the result of the expression is null, then it will look for a child step whose label is $null.`,
    step_prop_desc_while_expression: `The expression to (optionally) evaluate when determining whether to invoke the step's children.
If the result of the expression is a number, then it's ensured that it's < $gloopCount.
If it's a string that contains a number, then it will be converted to a number and ensured it's < $gloopCount.
If the string is not a number the while step will iterate it's children again if the string equals 'true'.`,
    step_prop_desc_set_expression:
        "The result of the expression is assigned to the target property. If not evaluated it will be used as text.",
    step_prop_desc_line_priority:
        "This field is used to prioritize map lines and set steps.\nA line/set with a lower number is executed before others with higher numbers.",
    step_prop_desc_concurrent_async: `When set to true, the children will run in a separate thread in sequence and the service will not wait for them to complete.
"When false, each child will run in it's own thread, and the service will wait for them all to complete before continuing.`,
    step_prop_desc_invoke_async:
        "When set to true, the step will be invoked in a separate thread and will not wait for it to complete.",
    step_prop_desc_input_array:
        "Input array for the step. For every entry in the input array, the iterate step will invoke it's children.\n Children of the iterate step will see the individual entries of the array, not the array itself.",
    step_prop_desc_while_output_array: `Output array for the step. For every iteration of the while step, a new entry will be added to the output array(if append is true).
If append is false, the existing entries will be overwritten with the new ones.`,
    step_prop_desc_iterate_output_array: `Output array for the step. For every entry in the input array, the iterate step will invoke it's children.
Children of the iterate step will see the individual entries of the array, not the array itself.
For every iteration, a new entry will be added to the output array (if append is true).
If append is false, the existing entries will be overwritten with the new ones.`,
    step_prop_desc_iterate_append:
        "If this is false it won't append entries to the output array, instead it will overwrite existing entries in the output array.",
    step_prop_desc_while_delay:
        "How long to wait between iterations. Times are set in milliseconds, so 1 second has a value of 1000.",
    step_prop_desc_iterate_close_input: `If true, the step will close the cursor for you after it has finished.
Leave this as true if you don't plan on using the cursor anymore.
Remember output cursors in particular should be manually closed if the step doesn't do it for you.`,
    step_prop_desc_iterate_close_output: `If true, the step will close the cursor for you after it has finished.
Leave this as true if you don't plan on using the cursor anymore.
Remember output cursors in particular should be manually closed if the step doesn't do it for you.`,
    step_prop_desc_while_repeat_error: `If this is set to true, the while step will repeat only if an exception was thrown while invoking it's children.
This is useful for retrying an operation that sometimes may not work. When this is true, exceptions are ignored and the while step will start over.`,
    selection_must_be_array: "Selection must an array.",
    select_gloop_array_title: "Select a Property Array",
    search_placeholder: "Search...",
    toggle_tree: "Toggle tree.",
    toggle_list: "Toggle list.",
    fetching_database_connections: "Fetching database connections...",
    no_available_connection: "No available connection.",
    no_available_keyspace: "No available keyspace.",
    no_available_database: "No available database.",
    no_available_collection: "No available collection.",
    duplicate_label: "Duplicate label.",
    min_length: (min: number) => `Minimum length is ${min}.`,
    max_length: (max: number) => `Maximum length is ${max}.`,
    object_prop_desc_name: "Name of the property.",
    object_prop_desc_alias: `Property name alias that is used when serializing as json/xml/anything else. Normally the name is ok, but if the name
    contains characters or a sequence that renders it invalid, then the name is sanitized for use in code
    and the alias is used when serializing to xml/json/yaml.`,
    object_prop_desc_comments: "Comments for the property.",
    object_prop_desc_default_value: "Default value, used when the value is null.",
    object_prop_desc_allow_null: "Whether null value is allowed.",
    object_prop_desc_array: "Set property as an array.",
    object_prop_desc_min_array_size: "Minimum size of the array.",
    object_prop_desc_max_array_size: "Maximum size of the array.",
    object_prop_desc_required:
        "Used to determine whether to show the variable in JSON/XML/YAML, regardless if the value is null.",
    object_prop_desc_namespace_uri: "Namespace of this property, used when writing XML.",
    object_prop_desc_xml_attribute:
        "Determines whether this property will be marshalled as an xml attribute.\nFor JSON this field has no affect. Invalid for arrays.",
    object_prop_desc_validate_expression:
        "This property is used to validate the value of the Object.\nThe value itself can be referred as 'val' in the expression.",
    object_prop_desc_output_expression:
        "Groovy expression that is used to format the data before being serialized to xml or json. The object itself can be referred as 'val' in the expression.",
    object_prop_desc_string_min_length: "Minimum length of the string.",
    object_prop_desc_string_max_length: "Maximum length of the string.",
    object_prop_desc_number_min: "Minimum value.",
    object_prop_desc_number_max: "Maximum value.",
    object_prop_desc_char_min: "Minimum character value.",
    object_prop_desc_char_max: "Maximum character value.",
    object_prop_desc_model_allow_extra_props: "Allow properties to be added to the model.",
    object_prop_desc_model_reference: "Model that the property references.",
    object_prop_desc_date_formats:
        "The service will use these date formats when reading data from JSON, XML, flat files, etc.",
    object_prop_desc_xml_type: "The data will be formatted using the given selection when marshalling to XML.",
    object_prop_desc_choices: "Choices of value.",
    object_prop_desc_allow_other_values: "Allow other values than the choices.",
    object_prop_desc_class_name: "Class name of the object.",
    property_name_exists: "A property with that name already exists.",
    cannot_use_gloop_keywords: "Cannot use keywords as name.",
    edit_choices_title: "Edit Choices",
    edit_date_formats_title: "Edit Date Formats",
    one_choice_per_line: "One choice per line:",
    one_date_format_per_line: "One date format per line:",
    min_value: (value: any) => `Minimum value is '${value}'.`,
    max_value: (value: any) => `Maximum value is '${value}'.`,
    edit_comments: "Edit Comments",
    invalid_date_format: "Invalid date format.",
    insert_prop_path: "Insert Property Path",
    insert_prop_path_gstring: "Insert Property Path in Groovy String",
    insert_prop_path_safe: "Insert Property Path with Safe Navigation",
    double_click: "Double-Click",
    discard_changes_title: "Discard Changes",
    discard_changes_question: "Discard your changes?",
    discard_btn: "Discard",
    no_btn: "No",
    edit_script_at_step_title: (line: number) => `Edit Script at step ${line}`,
    edit_set_expression_at_title: (path: string) => `Edit Set Expression at '${path}'`,
    edit_expression_at_step_title: (expressionType: string, line: number) =>
        `Edit ${expressionType} Expression at step ${line}`,
    edit_validation_expression_title: "Edit Validation Expression",
    edit_output_expression_title: "Edit Output Expression",
    creating_martini_package: (name: string) => `Creating package '${name}'...`,
    error_title: "Error",
    fetching_martini_packages: "Fetching packages...",
    fetching_endpoints: "Fetching endpoints...",
    invalid_destination_format: "Destination should be in the form of topic://name or queue://name",
    fetching_jms_destinations: "Fetching JMS destinations...",
    send_jms_message_dialog_title: "Send JMS Message",
    destination_dialog_title: "Select JMS Queue/Topic",
    sending_jms_message: "Sending JMS message...",
    success_title: "Success",
    message_sent: "Message sent successfully.",
    destination_name_exists: "A destination with that name already exists.",
    drop_browse_file_url: "Drop or browse a file, or enter a URL.",
    invalid_url: "Invalid URL.",
    existing_destinations_title: "Existing JMS Queues and Topics",
    new_destinations_title: "New JMS Queue or Topic",
    browse_btn: "Browse...",
    choose: "Choose",
    delete: "Delete",
    rename: "Rename",
    copy_path: "Copy Path",
    copy_namespace: "Copy Namespace",
    add: "Add",
    convert_to: "Convert To",
    toggle_allow_extra_props: "Toggle Allow Extra Properties",
    toggle_array: "Toggle Array",
    read_only: "Read Only",
    move_left: "Move Left",
    move_right: "Move Right",
    move_up: "Move Up",
    move_down: "Move Down",
    collapse_all: "Collapse All",
    expand_all: "Expand All",
    toggle_comments: "Toggle Comments",
    copied_to_clipboard: "Successfully copied to clipboard.",
    copying_as: format => `Copying as ${format}...`,
    database_connection_editor_saving: "Saving database connection...",
    database_connection_editor_starting: "Starting database connection...",
    database_connection_editor_stopping: "Stopping database connection...",
    database_connection_editor_testing: "Testing database connection...",
    database_connection_editor_testing_success: "Successfully established database connection.",
    revert_all_title: "Revert All",
    revert: "Revert",
    revert_all_question: "Revert all changes? This cannot be undone.",
    edit_martini_properties: "Edit Martini Properties",
    preparing_preview: "Preparing preview...",
    show_tree: "Show Tree",
    show_preview: format => `Show ${format} Preview`,
    selection_copied_to_clipboard: "Selection copied to clipboard successfully.",
    loading: "Loading...",
    saving_file: (path: string) => `Saving file '${path}'...`,
    file_saved_success: (path: string) => `File '${path}' saved successfully.`,
    creating_file: "Creating file...",
    auto_start_tooltip: "Automatically starts the database connection during Martini startup",
    use_xa_tooltip:
        "Use two-phase commit protocol. This ensures data integrity when accessing multiple relational databases by coordinating them in a single transaction.",
    use_trans_manager_join_tooltip:
        "Uncheck if the vendor's XADataSource implementation does not implement XAResource.isSameRM() properly.",
    unique_name_tooltip: "Required for crash recovery. Uses the name of the pool if empty.",
    two_phase_commit_order_position_tooltip:
        "Controls the position of this resource during the 2 phase commit protocol execution (used to guarantee the order of commits).",
    test_query_tooltip:
        "If 'Enable JDBC4 Connection Test' is unchecked, this query is sent to the database to determine whether a connection is still usable instead.",
    share_transaction_connection_tooltip:
        "By default, whenever a thread requests a connection from the pool, Martini will issue a new connection. All connections issued are bound into the same transaction context. Depending on the design of your application, this behavior can result in a large number of connections to the database -- and in the case of a database such as PostgreSQL, which uses one process per-connection this places a fairly heavy burden on the database. Having it checked will enable a thread-associated connection cache. With this unchecked, no matter how many times a thread requests a connection from the DataSource, Martini will return a single connection. Because connections can be shared within the context of a transaction, this provides a more efficient use of connection resources. A positive benefit of a single connection per thread is that the prepared statement cache (which is per-connection) is also made more efficient. Lastly, another benefit is that because connections are shared within the same thread, the overhead of establishing and testing a new connection to the database is avoided, which significantly improves the performance of some access patterns. Of course, Martini will still ensure correctness whenever this is checked. While the default value of this property is false for backward compatibility, the recommended setting is to have this checked.",
    statements_cache_size_tooltip:
        "Controls how many Prepared Statements are cached (per connection). A value of 0 means that statement caching is disabled.",
    max_pool_size_tooltip:
        "The maximum number of active connections the pool will allow in the pool. If this maximum is reached, a request for a connection from the pool will block the calling thread until a connection is available or 'Acquisition Timeout' is reached.",
    min_pool_size_tooltip:
        "The minimum number of active connections the pool will try to keep in the pool. In an idle system, the number of active connections will trend toward this value until it is reached. Connections that are retired and bring the pool below this value will be replenished until the minimum pool size is reached.",
    max_idle_time_tooltip:
        "When the pool is above 'Minimum Pool Size', it controls how long an idle connection will stay in the pool before being retired. However, even if a connection is idle for longer than 'Maximum Idle Time', the connection will not be retired if it would bring the pool below the 'Minimum Pool Size' value.",
    ignore_recovery_failures_tooltip:
        "Determines whether recovery errors are to be ignored or not. Ignoring recovery errors jeopardizes the failed transactions atomicity so only have this checked when you know what you're doing. This is mostly useful in a development environment.",
    enabled_jdbc4_connection_test_tooltip:
        "If your JDBC driver supports JDBC4, this method of testing the connection is likely much more efficient than using the 'Test Query'. In the case of a test query, the query must be sent to the database server, parsed, and executed before the connection can be used. JDBC4 exposes a method by which a driver can make its own determination of connectivity (possibly whether the socket is still connected, etc.).",
    defer_connection_release_tooltip:
        "Uncheck if the vendor's XADataSource implementation supports transactions interleaving.",
    automatic_enlisting_tooltip:
        "Controls whether connections from the PoolingDataSource are automatically enlisted/delisted into XA transactions.",
    apply_transaction_timeout_tooltip:
        "If checked, the transaction timeout will be passed to the XAResource.setTransactionTimeout method.",
    allow_local_transactions_tooltip:
        "Whether or not you want to be able to run SQL statements outside of XA transaction scope.",
    acquisition_timeout_tooltip:
        "Controls how long a request for a connection from the pool will block before being aborted (and an exception thrown).",
    acquisition_interval_tooltip: "Controls how long the pool waits between attempts to create new connections.",
    login_timeout_tooltip:
        "Controls how long (in seconds) to wait for a successful authentication against the database server. A value of zero specifies that the timeout is the default system timeout if there is one; otherwise, it assumes that there is no timeout.",
    acquire_increment_tooltip:
        "Controls how many connections are filled into the pool when the pool is empty but the 'Maximum Pool Size' value has not been reached.",
    previous: "Previous",
    next: "Next",
    close: "Close",
    select_driver_title: "Select a Driver",
    select_doc_type_title: "Select a Document Type",
    select_host_type_title: "Select a Host Type",
    fetching_drivers: "Fetching drivers...",
    unable_to_save_title: "Unable to Save",
    unable_to_save: "Unable to save the configuration because it still contains error(s).",
    gloop_cassandra_label: "Cassandra Service",
    create_gloop_cassandra_title: "Create a Cassandra Service",
    create_gloop_cassandra_description: "Create a new Cassandra service.",
    gloop_sql_label: "SQL Service",
    create_gloop_sql_title: "Create a SQL Service",
    create_gloop_sql_description: "Create a new SQL service.",
    gloop_mongodb_label: "MongoDB Service",
    create_gloop_mongodb_title: "Create a MongoDB Service",
    create_gloop_mongodb_description: "Create a new MongoDB service.",
    test_configuration: "Test Configuration",
    endpoint_editor_saving: "Saving endpoint...",
    endpoint_editor_starting: "Starting endpoint...",
    endpoint_editor_stopping: "Stopping endpoint...",
    endpoint_editor_testing: "Testing endpoint configuration...",
    endpoint_editor_testing_success: "Successfully validated endpoint configuration.",
    package_name_exists: "A package with that name already exists.",
    only_alphanumeric: "Can only contain alphanumeric, underscore and hyphen characters.",
    invalid_marketplace_id: "Invalid id, must be something like 'com.company.new-package'.",
    fetching_doc_types: "Fetching document types...",
    fetching_host_types: "Fetching host types...",
    general_config_title: "General Configuration",
    configuration_title: (name: string) => `${name} Configuration`,
    service_field: "Service",
    document_type_field: "Document Type",
    auto_start_field: "Auto Start",
    log_to_tracker_field: "Log to Tracker",
    replicated_field: "Replicated",
    endpoint_service_tooltip: "The service to execute when the endpoint is triggered.",
    endpoint_doc_type_tooltip: "The document type to be registered to Tracker when this endpoint is triggered.",
    endpoint_auto_start_tooltip:
        "Whether or not the endpoint should be started automatically when the package is started.",
    endpoint_log_to_tracker_tooltip: "Flag determining whether executions should be logged to Tracker.",
    endpoint_replicated_tooltip:
        "If this endpoint is configured on a Martini instance that's running in a cluster, replicated will determine whether to run the endpoint on all instances, or only the elected leader node in the cluster. When this is checked, all instances will run the endpoint. When it's unchecked, only the leader node will run the endpoint.",
    rss_polling_interval_field: "Polling Interval (seconds)",
    rss_only_new_field: "Only New Entries",
    rss_url_tooltip: "The URL hosting the RSS feed.",
    rss_polling_interval_tooltip: "The interval in seconds, at which Martini checks for changes in the RSS feed.",
    rss_only_new_tooltip: "When checked, only 'unread' entries in the RSS feed will be sent to the service.",
    email_host_tooltip: "The email server to connect to.",
    email_port_tooltip: "The server port number.",
    email_username_tooltip: "The email address used to login.",
    email_password_tooltip: "The password used to login.",
    email_polling_interval_tooltip: "The interval in seconds, at which Martini checks the inbox.",
    email_ssl_tooltip: "Flag to determine whether the connection uses SSL.",
    email_protocol_tooltip: "The email protocol to use. Supports protocols: IMAP and POP3.",
    email_deleteOnReceive_tooltip: "Flag determining whether the received email be deleted after the service is invoked.",
    email_sendOutputAsReply_tooltip: "Flag determining whether the output of the service be used as a reply body.",
    email_sendReplyOnError_tooltip: "Flag determining whether the exception thrown by the service, if any, be sent back as reply body.",
    email_polling_interval_seconds: "Polling Interval (seconds)",
    email_from_tooltip: "The FROM to be used in the email. If none is provided, Username is used.",
    email_actions: "Email Actions",
    protocol: "Protocol",
    username: "Username",
    password: "Password",
    port: "Port",
    host: "Host",
    delete_email_once_received: "Delete Email Once Received",
    send_service_response_as_reply: "Send Service Response As Reply",
    send_reply_on_error: "Send Reply On Error",
    from: "From",
    connection_username_tooltip: "The username to use when authenticating to the server.",
    connection_password_tooltip: "The password to use when authenticating to the server.",
    cassandra_contact_points_tooltip: "Describes the contact points for a Cassandra cluster.",
    cassandra_port_tooltip: "The port to use when connecting to the server.",
    cassandra_max_schema_agreement_wait_seconds_tooltip:
        "Sets the maximum time to wait for schema agreement before returning from a DDL query.",
    cassandra_compression_tooltip: "The compression to use.",
    cassandra_ssl_tooltip: "Whether to use SSL.",
    cassandra_metrics_tooltip: "Whether to collect metrics.",
    cassandra_core_connections_per_host_local_tooltip: "The core number of connections per host in local.",
    cassandra_core_connections_per_host_remote_tooltip: "The core number of connections per host in remote.",
    cassandra_max_connections_per_host_local_tooltip: "The maximum number of connections per host in local.",
    cassandra_max_connections_per_host_remote_tooltip: "The maximum number of connections per host in remote.",
    cassandra_heartbeat_interval_tooltip:
        "The heart beat interval, after which a message is sent on an idle connection to make sure it's still alive.",
    cassandra_new_connection_threshold_local_tooltip:
        "The threshold that triggers the creation of a new connection to a host in local.",
    cassandra_new_connection_threshold_remote_tooltip:
        "The threshold that triggers the creation of a new connection to a host in remote.",
    cassandra_max_requests_per_connection_local_tooltip: "The maximum number of requests per connection in local.",
    cassandra_max_requests_per_connection_remote_tooltip: "The maximum number of requests per connection in remote.",
    cassandra_idle_timeout_tooltip: "The timeout before an idle connection is removed in seconds.",
    cassandra_pool_timeout_tooltip:
        "The timeout when trying to acquire a connection from a host's pool in milliseconds.",
    cassandra_max_queue_size_tooltip: "The maximum number of requests that enqueued if no connection is available.",
    cassandra_connect_timeout_tooltip: "The connection timeout in milliseconds.",
    cassandra_read_timeout_tooltip: "The per-host read timeout in milliseconds.",
    cassandra_keep_alive_tooltip: "Whether to enable TCP keepalive.",
    cassandra_reuse_address_tooltip: "Whether to enable reuse-address.",
    cassandra_tcp_no_delay_tooltip: "Whether to disable Nagle's algorithm.",
    cassandra_so_linger_tooltip: "The linger-on-close timeout.",
    cassandra_receive_buffer_size_tooltip: "A hint to the size of the underlying buffers for incoming network I/O.",
    cassandra_send_buffer_size_tooltip: "A hint to the size of the underlying buffers for outgoing network I/O.",
    cassandra_consistency_level_tooltip: "The default consistency level used by queries.",
    cassandra_serial_consistency_level_tooltip: "The default serial consistency level used by queries.",
    cassandra_fetch_size_tooltip: "The default fetch size used by queries.",
    cassandra_default_idempotence_tooltip: "The default idempotence for queries.",
    cassandra_prepare_on_all_hosts_tooltip: "Whether the driver should prepare statements on all hosts in the cluster.",
    cassandra_reprepare_on_up_tooltip:
        "Whether the driver should re-prepare all cached prepared statements on a host when it marks it back up.",
    cassandra_refresh_schema_interval_tooltip:
        "The default window size in milliseconds used to debounce node list refresh requests.",
    cassandra_max_pending_refresh_schema_requests_tooltip:
        "The maximum number of schema refresh requests that the control connection can accumulate before executing them.",
    cassandra_refresh_node_list_interval_tooltip:
        "The default window size in milliseconds used to debounce node list refresh requests.",
    cassandra_max_pending_refresh_node_list_requests_tooltip:
        "The maximum number of node list refresh requests that the control connection can accumulate before executing them.",
    cassandra_refresh_node_interval_tooltip:
        "The default window size in milliseconds used to debounce node refresh requests.",
    cassandra_max_pending_refresh_node_requests_tooltip:
        "The maximum number of node refresh requests that the control connection can accumulate before executing them.",
    cassandra_contact_point_name_exists: "A contact point with that name already exists.",
    cassandra_contact_points_should_not_be_empty: "It's required to have at least one contact point.",
    mongodb_connection_string_tooltip:
        "Describes the hosts and options to be used when connecting to a MongoDB server. Hosts defined on the connection string are overridden if there is a host defined on Cluster Settings hosts.",
    mongodb_authentication_mechanism_tooltip: "The mechanism to be used during authentication.",
    mongodb_authentication_database_tooltip:
        "The authentication database where the specified username was created. If this is not specified, it selects the value according to the following rules_tooltip\n" +
        " - If a username is not provided, authentication is skipped\n" +
        " - If a database name is specified, it is used as the authentication database\n" +
        " - Otherwise, 'admin' is used",
    mongodb_hosts_tooltip: "The hosts for the cluster.",
    mongodb_type_tooltip: "The type of cluster to connect to.",
    mongodb_local_threshold_tooltip:
        "This defines the size of the latency window for selecting among multiple suitable servers.",
    mongodb_server_selection_timeout_tooltip:
        "This is the timeout when selecting a server. A value of 0 means that it will timeout immediately if no server is available. A negative value means to wait indefinitely.",
    mongodb_maintenance_frequency_tooltip: "This is the time period between runs of the maintenance job.",
    mongodb_maintenance_initial_delay_tooltip:
        "The period of time to wait before running the first maintenance job on the connection pool.",
    mongodb_max_connection_idle_time_tooltip:
        "The maximum idle time of a pooled connection. A zero value indicates no limit to the idle time. A pooled connection that has exceeded its idle time will be closed and replaced when necessary by a new connection.",
    mongodb_max_connection_life_time_tooltip:
        "The maximum time a pooled connection can live for. A zero value indicates no limit to the life time. A pooled connection that has exceeded its life time will be closed and replaced when necessary by a new connection.",
    mongodb_max_wait_time_tooltip:
        "The maximum time that a thread may wait for a connection to become available. A value of 0 means that it will not wait. A negative value means it will wait indefinitely.",
    mongodb_max_wait_queue_size_connection_pool_config_tooltip:
        "This is the maximum number of operations that may be waiting for a connection to become available from the pool. All further operations will get an exception immediately.",
    mongodb_min_size_tooltip:
        "The minimum number of connections. Those connections will be kept in the pool when idle, and the pool will ensure that it contains at least this minimum number.",
    mongodb_max_size_tooltip:
        "The maximum number of connections allowed. Those connections will be kept in the pool when idle. Once the pool is exhausted, any operation requiring a connection will block waiting for an available connection.",
    mongodb_heartbeat_frequency_tooltip: "The frequency that the cluster monitor attempts to reach each server.",
    mongodb_min_heartbeat_frequency_tooltip:
        "The minimum heartbeat frequency.  In the event that the driver has to frequently re-check a server's availability, it will wait at least this long since the previous check to avoid wasted effort.",
    mongodb_connect_timeout_tooltip: "The timeout for the socket to connect.",
    mongodb_read_timeout_tooltip: "The timeout for socket reads.",
    mongodb_receive_buffer_size_tooltip: "The size of the buffer when receiving from the socket.",
    mongodb_send_buffer_size_tooltip: "The size of the buffer when sending to the socket.",
    mongodb_connection_string_and_hosts_cannot_be_both_empty: "Connection String and Hosts cannot be both empty",
    mongodb_connection_string_must_start_with_mongodb:
        "Connection String must start with 'mongodb_tooltip://' or 'mongodb+srv_tooltip://'.",
    mongodb_min_size_cannot_be_gte_max_size: "Minimum Size cannot be greater than or equal to Max Size.",
    mongodb_max_size_cannot_be_lte_min_size: "Max Size cannot be greater than or equal to Minimum Size.",
    mongodb_duplicate_host: "Duplicate host.",
    advanced: "Advanced",
    query: "Query",
    pooling: "Pooling",
    socket: "Socket",
    cluster: "Cluster",
    connection_pool: "Connection Pool",
    server: "Server",
    connection: "Connection",
    port_out_range: "Port out of range. The port should be in between 0 and 65535.",
    redis_uri_tooltip: "Describes the hosts and options to be used when connecting to a Redis server.",
    redis_ping_before_activate_connection_tooltip: "Enables initial PING barrier before any connection is usable.",
    redis_auto_reconnect_tooltip: "Controls auto-reconnect behavior on connections.",
    redis_cancel_command_on_reconnect_failure_tooltip:
        "If this flag is true any queued commands will be canceled when a reconnect fails within the activation sequence.",
    redis_publish_on_scheduler_tooltip: "Use a dedicated Scheduler to emit reactive data signals.",
    redis_suspend_reconnect_on_protocol_failure_tooltip:
        "If this flag is true the reconnect will be suspended on protocol errors.",
    redis_request_queue_size_tooltip: "Request queue size for a connection.",
    redis_disconnected_behavior_tooltip:
        "Behavior for command invocation when connections are in a disconnected state.",
    redis_ssl_provider_tooltip: "Use the OpenSSL provider or the JDK SSL for SSL connections.",
    redis_keystore_file_tooltip: "The Keystore file to load client certificates.",
    redis_keystore_password_tooltip: "The password of the Keystore file.",
    redis_truststore_file_tooltip: "The Truststore file to load trusted certificates.",
    redis_truststore_password_tooltip: "The password of the Truststore file.",
    redis_start_tls_tooltip: "Whether to start TLS.",
    redis_connection_timeout_tooltip: "The connection timeout, set to -1 for no timeout.",
    redis_auto_flush_tooltip: "Whether to auto flush commands.",
    redis_max_total_tooltip: "A negative value indicates that there is no limit to connections allocated by the pool.",
    redis_max_idle_tooltip:
        "A negative value indicates that there is no limit to the number of idle connections held by the pool.",
    redis_min_idle_tooltip:
        "If the configured value of Min Idle is greater than the configured value for Max Idle, then the value of Max Idle will be used instead.",
    redis_eviction_policy_tooltip: "The data eviction method to be used when the database size reaches its limit.",
    redis_time_between_eviction_tooltip: "A value of -1 indicates idle object eviction to be disabled by default.",
    redis_min_evictable_tooltip:
        "The minimum amount of time an object may sit idle in the pool before it is eligible for eviction.",
    redis_soft_min_evictable_tooltip:
        'The minimum amount of time an object may sit idle in the pool before it is eligible for eviction with the extra condition that at least "minIdle" object instances remain in the pool.',
    redis_test_per_eviction_tooltip: "A negative value indicates to test all connections.",
    redis_evictor_shutdown_tooltip:
        "The timeout to be used when waiting for the Evictor to shutdown if the pool is closed and is the only pool still using the the value for the Evictor.",
    redis_jmx_enabled_tooltip: "Determines if JMX will be enabled for pools created and registered with the platform.",
    redis_jmx_name_base_tooltip:
        "The base name that will be used as part of the name assigned to JMX enabled pools created with this configuration instance.",
    redis_jmx_name_prefix_tooltip:
        "The prefix name that will be used as part of the name assigned to JMX enabled pools created with this configuration instance.",
    redis_max_wait_tooltip: "The amount of time to wait for an available connection.",
    redis_block_when_exhausted_tooltip:
        "A value of false means an error will occur when a client requests a connection and none are available.",
    redis_lifo_tooltip: "Determines whether or not the pool returns idle objects in last-in-first-out order.",
    redis_fairness_tooltip: "Ensure that threads receive available instances in request arrival order.",
    redis_test_create_tooltip: "Whether connections should be tested upon creation.",
    redis_test_borrow_tooltip: "Whether connections should be tested upon borrowing from the pool.",
    redis_test_return_tooltip: "Whether connections should be tested upon returning to the pool.",
    redis_test_idle_tooltip: "Whether connections should be tested while idle.",
    redis_tcp_no_delay_tooltip: "Whether to use TCP NoDelay.",
    redis_keep_alive_tooltip: "Whether to enable TCP keepalive",
    redis_invalid_uri:
        "The URI must start with redis://, rediss://, redis+ssl://, redis-socket://, redis+socket:// or redis-sentinel://",
    redis_uri_formats_title: "Redis URI Formats",
    redis_keystore_file_not_set: "Keystore file is not set.",
    redis_truststore_file_not_set: "Truststore file is not set.",
    name: "Name",
    location: "Location",
    select_directory_title: "Select a Directory",
    directory_must_be_selected: "A directory must be selected.",
    create_file_title: "Create a File",
    create: "Create",
    create_code_dir_title: "Create a Code Directory",
    code_dir_title: "Code Directory",
    create_new_code_dir: "Create a new code directory.",
    ffd_label: "Flat File Service",
    create_ffd_title: "Create a Flat File Service",
    create_ffd_desc: "Create a new  flat file service.",
    pressing_updown_changes_type: "Pressing Up or Down arrow while editing the name changes the type.",
    pressing_updown_changes_source: "Pressing Up or Down arrow while editing the name changes the source.",
    pressing_updown_changes_kind: "Pressing Up or Down arrow while editing the name changes the kind.",
    pressing_updown_changes_package_or_type:
        "Pressing Up or Down arrows while editing the name changes the type, if alt is pressed it changes the package.",
    delimited: "Delimited",
    fixed_width: "Fixed Width",
    spreadsheet_excel: "Spreadsheet (Excel)",
    file_or_url: "File/URL",
    drop_browse_spreadsheet: "Drop or browse an Excel spreadsheet, or enter a URL",
    sheet_number: "Sheet Number",
    start_row: "Start Row",
    generating_ffd: "Generating flat file descriptor",
    reading_file: "reading file",
    type: "Type",
    comments: "Comments",
    general: "General",
    alias: "Alias",
    default_value: "Default Value",
    allow_null: "Allow Null",
    array: "Array",
    min_array_size: "Min Array Size",
    max_array_size: "Max Array Size",
    required: "Required",
    namespace_uri: "Namespace URI",
    xml_attribute: "XML Attribute",
    validation_expression: "Validation Expression",
    output_expression: "Output Expression",
    object_class_name: "Object Class Name",
    min_length_title: "Min Length",
    max_length_title: "Max Length",
    min: "Min",
    max: "Max",
    allow_extra_props: "Allow Extra Properties",
    reference: "Reference",
    date_formats: "Date Formats",
    xml_type: "XML Type",
    choices: "Choices",
    allow_other_values: "Allow Other Values",
    create_gloop_model_title: "Create a Data Model",
    create_gloop_model_desc: "Create a new data model.",
    create_gloop_model_from_json: "Create a data model from JSON.",
    create_gloop_model_from_json_schema: "Create a data model from a JSON Schema (json-schema.org).",
    create_gloop_model_from_xml: "Create a data model from XML.",
    create_gloop_model_from_xml_schema: "Create a data model from a XML Schema (.xsd).",
    create_gloop_model_from_yaml: "Create a data model from YAML.",
    select_source: "Select a source.",
    none: "None",
    drop_browse_json_schema: "Drop or browse a JSON Schema file, or enter a URL.",
    drop_browse_xml_schema: "Drop or browse an XML Schema file (.xsd), or enter a URL.",
    drop_browse_html: "Drop or browse an HTML file, or enter a URL.",
    source: "Source",
    schema: "Schema",
    invalid: "Invalid.",
    generating_gloop_model: "Generating data model...",
    generating_gloop_models: "Generating data models...",
    reading_schema: "reading_schema",
    label: "Label",
    enabled: "Enabled",
    block_type: "Block Type",
    expression: "Expression",
    language: "Language",
    script: "Script",
    priority: "Priority",
    async: "Async",
    input_array: "Input Array",
    output_array: "Output Array",
    append: "Append",
    delay: "Delay",
    close_input_cursor: "Close Input Cursor",
    close_output_cursor: "Close Output Cursor",
    repeat_on_error: "Repeat on Error",
    create_gloop_service: "Create a new service.",
    create_gloop_service_title: "Create a Service",
    input: "Input",
    output: "Output",
    connection_name: "Connection Name",
    query_type: "Query Type",
    add_properties: "Add Properties",
    delete_properties: "Delete Properties",
    delete_steps: "Delete Steps",
    database_name: "Database Name",
    collection_name: "Collection Name",
    keyspace: "Keyspace",
    gloop_template_label: "Web Page Template",
    create_gloop_template_desc: "Create a new web page template.",
    create_gloop_template_title: "Create a Web Page Template",
    create_gloop_template_scratch_html: "Create a web page template from scratch or existing HTML.",
    generate_gloop_template_from_html: "Generate a web page template from existing HTML.",
    not_valid_css_class_name: "Not a valid CSS class name.",
    raw_html: "Raw HTML",
    extract_head: "Extract Head",
    extract_footer: "Extract Footer",
    footer_class: "Footer Class",
    generating_gloop_template: "Generating web page template",
    create_groovy_class_title: "Create a Groovy Class",
    create_groovy_class: "Create a Groovy class.",
    groovy_class: "Groovy Class",
    kind: "Kind",
    modifiers: "Modifiers",
    public: "Public",
    package: "Package",
    final: "Final",
    abstract: "Abstract",
    must_start_uppercase: "Must start with a capital letter.",
    toggle_props_view: "Toggle Properties View",
    properties: "Properties",
    start: "Start",
    stop: "Stop",
    restart: "Restart",
    load: "Load",
    unload: "Unload",
    start_multi_packages: "Start Packages",
    start_single_package: "Start Package",
    start_single_package_question: name => `Start package '${name}'?`,
    start_multi_packages_question: "Start the following packages?",
    starting_package: "Starting package",
    stop_multi_packages: "Stop Packages",
    stop_single_package: "Stop Package",
    stop_single_package_question: name => `Stop package '${name}'?`,
    stop_multi_packages_question: "Stop the following packages?",
    stopping_package: "Stopping package",
    unload_multi_packages: "Unload Packages",
    unload_single_package: "Unload Package",
    unload_single_package_question: name => `Unload package '${name}'?`,
    unload_multi_packages_question: "Unload the following packages?",
    unloading_package: "Unloading package",
    load_multi_packages: "Load Packages",
    load_single_package: "Load Package",
    load_single_package_question: name => `Load package '${name}'?`,
    load_multi_packages_question: "Load the following packages?",
    loading_package: "Loading package",
    restart_multi_packages: "Restart Packages",
    restart_single_package: "Restart Package",
    restart_single_package_question: name => `Restart package '${name}'?`,
    restart_multi_packages_question: "Restart the following packages?",
    restarting_package: "Restarting package",
    delete_multi_packages: "Delete Packages",
    delete_single_package: "Delete Package",
    delete_single_package_question: name => `Delete package '${name}'?`,
    delete_multi_packages_question: "Delete the following packages?",
    deleting_package: "Deleting package",
    create_package: "Create a new package.",
    create_package_title: "Create a Package",
    version: "Version",
    marketplace_id: "Marketplace Id",
    state_on_create: "State on Create",
    martini_package: "Package",
    loaded: "Loaded",
    started: "Started",
    unloaded: "Unloaded",
    resource_search_desc: "Search for any resource",
    resource_search_placeholder: "Type to search for any resource...",
    no_matches: "No matches",
    matches_of: (current: number, total: number) => `${current} of ${total}`,
    start_multi_db_connections: "Start Database Connections",
    start_single_db_connection: "Start Database Connection",
    start_single_db_connection_question: name => `Start database connection '${name}'?`,
    start_multi_db_connections_question: "Start the following database connections?",
    starting_db_connection: "Starting database connection",
    stop_multi_db_connections: "Stop Database Connections",
    stop_single_db_connection: "Stop Database Connection",
    stop_single_db_connection_question: name => `Stop database connection '${name}'?`,
    stop_multi_db_connections_question: "Stop the following database connections?",
    stopping_db_connection: "Stopping database connection",
    delete_multi_db_connections: "Delete Database Connections",
    delete_single_db_connection: "Delete Database Connection",
    delete_single_db_connection_question: name => `Delete database connection '${name}'?`,
    delete_multi_db_connections_question: "Delete the following database connections?",
    deleting_db_connection: "Deleting database connection",
    create_db_connection: "Create a database connection.",
    create_db_connection_title: "Create a Database Connection",
    deleting_core_db_connection_warning:
        "Stopping a core database connection might prevent Martini from functioning and might need to be restarted.",
    database_connection: "Database Connection",
    connection_name_exists: "A connection with that name already exists.",
    type_search_model_ref: "Type to search a model reference...",
    select_model_ref_title: "Select Data Model Reference",
    start_multi_endpoints: "Start Endpoints",
    start_single_endpoint: "Start Endpoint",
    start_single_endpoint_question: name => `Start endpoint '${name}'?`,
    start_multi_endpoints_question: "Start the following endpoints?",
    starting_endpoint: "Starting endpoint",
    stop_multi_endpoints: "Stop Endpoints",
    stop_single_endpoint: "Stop Endpoint",
    stop_single_endpoint_question: name => `Stop endpoint '${name}'?`,
    stop_multi_endpoints_question: "Stop the following endpoints?",
    stopping_endpoint: "Stopping endpoint",
    delete_multi_endpoints: "Delete Endpoints",
    delete_single_endpoint: "Delete Endpoint",
    delete_single_endpoint_question: name => `Delete endpoint '${name}'?`,
    delete_multi_endpoints_question: "Delete the following endpoints?",
    deleting_endpoint: "Deleting endpoint",
    create_endpoint: "Create an endpoint.",
    create_endpoint_title: "Create an Endpoint",
    endpoint: "Endpoint",
    endpoint_name_exists: "An endpoint with that name already exists.",
    directory: "Directory",
    create_directory: "Create a directory.",
    create_directory_title: "Create a Directory",
    creating_directory: path => `Creating directory '${path}'`,
    failed_create_directory: path => `Failed to create directory '${path}'.`,
    failed_create_file: (path, error) => `Failed to create file '${path}': ${error}.`,
    file: "File",
    create_file: "Create a file.",
    delete_multi_resources: "Delete Resources",
    delete_single_resource: "Delete Resource",
    delete_multi_resources_question: "Delete the following resources?",
    delete_single_resource_question: path => `Delete '${path}'?`,
    deleting_resource: "Deleting resource",
    rename_resource: "Rename Resource",
    renaming_resource: name => `Renaming resource '${name}'`,
    send_jms_message: "Send JMS Message",
    destination: "Destination",
    message: "Message",
    raw_text: "Raw Text",
    navigator: "Navigator",
    new: "New",
    finish: "Finish",
    welcome: "Welcome",
    learn_more_docs: "Learn more on Martini Docs",
    add_mode: text => `Add Mode: ${text}`,
    add_to: "Add To",
    add_after: "Add After",
    settings: "Settings",
    add_property: type => `Add a ${type}.`,
    add_model_with_reference: reference => `Add a model with '${reference}' as reference.`,
    sort_by_name: "Sort by Name",
    generate: "Generate",
    model_from_text_wizard_title: "Model from Text",
    show_model_meta_properties: "Show the model's meta-properties.",
    show_service_meta_properties: "Show the service's meta-properties.",
    toggle_show_script_lines: "Toggle Show Script Lines",
    toggle_show_map_lines: "Toggle Show Map Lines and Set Steps",
    toggle_show_method_signatures: "Toggle Show Function/Service Signatures",
    toggle_show_named_parameters: "Toggle Show Named Parameters",
    show_script_lines: "Show Script Lines",
    show_map_lines: "Show Map Lines and Set Steps",
    show_comments: "Show Comments",
    show_method_signatures: "Show Function/Service Signatures",
    show_named_parameters: "Show Named Parameters",
    edit_label: "Edit Label",
    toggle_enabled: "Toggle Enabled",
    filters: "Filters",
    wrap_with: "Wrap With",
    failed_resolve_gloop_service: name => `Failed to resolve the service '${name}'.`,
    edit: "Edit",
    select_one_value: "Select one of the values",
    or_another_value: "Or set another value",
    replace: "Replace",
    replace_mapping: (from: string, to: string) => `Replace mapping ${from} → ${to}?`,
    replace_set_expression: (to: string) => `Replace set expression at ${to}?`,
    select_step_for_label: (label: string) => `Select a step for the label '${label}'`,
    validate_input: "Validate Input",
    validate_output: "Validate Output",
    gloop_service_prop_desc_comments: "The comments for the service.",
    gloop_service_prop_desc_validate_input:
        "Whether to validate the given input model properties when the service is executed.",
    gloop_service_prop_desc_validate_output:
        "Whether to validate the resulting output model properties after the service is done executing.",
    gloop_service_http_methods_desc: "Select which HTTP methods your endpoint will support.",
    gloop_service_body_parameter_desc:
        "If you select POST, PUT, or PATCH, you will be allowed to set the body of your requests. The body can be any of the service's inputs.",
    gloop_service_url_path_desc:
        "Enter the path you want to use for accessing the service. You can set an input property (except data models and objects) as a path parameter by enclosing it with {}.",
    http_methods: "HTTP Methods",
    body_parameter: "Body Parameter",
    url_path: "URL Path",
    dnd_to_map: "Drag-and-Drop\nproperties to map",
    declare: "Declare",
    declare_property: "Declare Property",
    add_prop_and_map: "Add Property and Map",
    declare_prop_and_map: "Declare Property and Map",
    unload_property: "Unload Property",
    reload_property: "Reload Property",
    set_expression: "Set Expression",
    copy_as: "Copy As",
    add_tag: "Add Tag",
    tag: "Tag",
    edit_tag_name: "Edit Tag Name",
    edit_tag_content: "Edit Tag Content",
    attributes: "Attributes",
    attribute_name_exists: "An attribute with that name already exists.",
    edit_value: "Edit Value",
    select_attr_value: "Select an attribute value",
    select_attribute: "Select an attribute",
    data_model: "Data Model",
    flux_label: "Event Based Workflow",
    create_flux_title: "Create an Event Based Workflow",
    create_flux_desc: "Create a new event based workflow.",
    hide_file_extensions: "Hide File Extensions",
    hide_file_extensions_desc: "Whether to hide the file extensions in the navigator for the files under the code folder.",
    invoke: "Invoke",
    execute: "Execute",
    case: "Case",
    function: "Function",
    search_function_placeholder: "Search a function name...",
    rest_api_title_tooltip: "The title of the application.",
    rest_api_version_tooltip: "Provides the version of the application API (not to be confused with the specification version).",
    rest_api_description_tooltip: "A short description of the application. GFM syntax can be used for rich text representation.",
    rest_api_tos_tooltip: "The Terms of Service for the API.",
    rest_api_contact_name_tooltip: "The identifying name of the contact person/organization.",
    rest_api_contact_url_tooltip: "The URL pointing to the contact information. MUST be in the format of a URL.",
    rest_api_contact_email_tooltip: "The email address of the contact person/organization. MUST be in the format of an email address.",
    rest_api_license_name_tooltip: "The license name used for the API.",
    rest_api_license_url_tooltip: "A URL to the license used for the API. MUST be in the format of a URL.",
    tags: "Tags",
    description: "Description",
    ext_doc_url: "External Doc URL",
    ext_doc_description: "External Doc Description",
    duplicate_tag_name: "Duplicate tag name.",
    rest_api_doc_gen_url_tooltip: "Martini automatically generates the documentation for your API.",
    rest_api_doc_url_tooltip: "The URL for the target documentation.",
    rest_api_doc_desc_tooltip: "A short description of the target documentation. GFM syntax can be used for rich text representation.",
    generated_doc_url: "Generated Doc URL",
    title: "Title",
    tos: "Terms of Service",
    contact_name: "Contact Name",
    contact_url: "Contact URL",
    contact_email: "Contact Email",
    license_name: "License Name",
    license_url: "License URL",
    documentation: "Documentation"
};

